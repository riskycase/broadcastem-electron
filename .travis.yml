jobs:
    include:
        - stage: Lint
          language: node_js
          node_js: node
          script:
              - yarn install
              - yarn prettier --check .

        - stage: Build
          cache:
              directories:
                  - node_modules
                  - $HOME/.cache/electron
                  - $HOME/.cache/electron-builder

          before_cache:
              - rm -rf $HOME/.cache/electron-builder/wine
          os: linux
          services: docker
          language: generic
          script:
              - |
                  docker run --rm \
                    -e GH_TOKEN=${GH_TOKEN} \
                   -v ${PWD}:/project \
                   -v ~/.cache/electron:/root/.cache/electron \
                   -v ~/.cache/electron-builder:/root/.cache/electron-builder \
                   electronuserland/builder:wine \
                    /bin/bash -c "yarn --link-duplicates --pure-lockfile && yarn build --linux"

        - stage: Build
          cache:
              directories:
                  - node_modules
                  - $HOME/.cache/electron
                  - $HOME/.cache/electron-builder

          before_cache:
              - rm -rf $HOME/.cache/electron-builder/wine
          os: linux
          services: docker
          language: generic
          script:
              - |
                  docker run --rm \
                    -e GH_TOKEN=${GH_TOKEN} \
                   -v ${PWD}:/project \
                   -v ~/.cache/electron:/root/.cache/electron \
                   -v ~/.cache/electron-builder:/root/.cache/electron-builder \
                   electronuserland/builder:wine \
                    /bin/bash -c "yarn --link-duplicates --pure-lockfile && yarn build --win"

        - stage: Release
          if: tag IS present
          cache:
              directories:
                  - node_modules
                  - $HOME/.cache/electron
                  - $HOME/.cache/electron-builder

          before_cache:
              - rm -rf $HOME/.cache/electron-builder/wine
          os: osx
          osx_image: xcode10.2
          language: node_js
          node_js: node
          env:
              - ELECTRON_CACHE=$HOME/.cache/electron
              - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder
          script:
              - yarn install
              - yarn release

        - stage: Release
          if: tag IS present
          cache:
              directories:
                  - node_modules
                  - $HOME/.cache/electron
                  - $HOME/.cache/electron-builder

          before_cache:
              - rm -rf $HOME/.cache/electron-builder/wine
          os: linux
          services: docker
          language: generic
          script:
              - |
                  docker run --rm \
                    -e GH_TOKEN=${GH_TOKEN} \
                   -v ${PWD}:/project \
                   -v ~/.cache/electron:/root/.cache/electron \
                   -v ~/.cache/electron-builder:/root/.cache/electron-builder \
                   electronuserland/builder:wine \
                    /bin/bash -c "yarn --link-duplicates --pure-lockfile && yarn release --linux"

        - stage: Release
          if: tag IS present
          cache:
              directories:
                  - node_modules
                  - $HOME/.cache/electron
                  - $HOME/.cache/electron-builder

          before_cache:
              - rm -rf $HOME/.cache/electron-builder/wine
          os: linux
          services: docker
          language: generic
          script:
              - |
                  docker run --rm \
                    -e GH_TOKEN=${GH_TOKEN} \
                   -v ${PWD}:/project \
                   -v ~/.cache/electron:/root/.cache/electron \
                   -v ~/.cache/electron-builder:/root/.cache/electron-builder \
                   electronuserland/builder:wine \
                    /bin/bash -c "yarn --link-duplicates --pure-lockfile && yarn release --win"

env:
    global:
        secure: jGCTsEnWB8XZ45Gi3vzpJIQQ6WaB4vEU5yLqbwMebYJ9J76CD3qd1hd0z5vLdxqCykR02o9GCrVdeYE1mT+1oPBvTos4ywO2qApAy3inQfF5H7prkhVx/rTXiod7eH9WJkFsaYbfQ29JvlOrnD3H5algBCu1d28dWF2WydbHH7yo+p9YzbiFwoqucG/T5C0YDIEC2dWZwmhsCQmQzycxaZDQ6xgN+pFbDepFZVBHiRvsgqsGzRbDrRyO6Y0k+6t56e6J1xZ7iQnL9NJxBJdVTmtgCuMvyqAS4LINnc4Uva+nktZ4hXZxUkyK8+jv8yg2KWOAogiNq4VyDXtSV513v0ZSLAm39jJCYgsupT5FHjq0t3BC3YXXh3wFxbS9XmkBlYLsv89FRSWwtOo2hkctSsYfnYAyjxe8nPeeBH61bJ9InVYPqebyaXnC1QUWTYQCnbHs6dA+yIo+gNQHKXML8kgQsmUoPHibtNYGZ3pMWsxcNShTUICzkozqGMMmQ+fmZu/3cnZPjWuL4ECMMvZu3bETm01LDzNOo/Qvtl0JAm9JUqfZ9Dn3S7xGh2tB/tytNdR92zIPxPzJX/dAYms8BC4SRmfkcI9WEXdRUzel5bCYrOTm5xMgoJNOs1iyRiu2L6JBUxIrXLHEDCA2QRgJh9JMksXUh804K6Vm8BePaaA=
