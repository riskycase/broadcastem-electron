jobs:
  include:
    - stage: Build
      cache:
        directories:
          - node_modules
          - $HOME/.cache/electron
          - $HOME/.cache/electron-builder

      before_cache:
        - rm -rf $HOME/.cache/electron-builder/wine
      os: osx
      osx_image: xcode10.2
      language: node_js
      node_js: node
      env:
        - ELECTRON_CACHE=$HOME/.cache/electron
        - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder
      script: 
      - yarn install
      - yarn build
    - stage: Build
      cache:
        directories:
          - node_modules
          - $HOME/.cache/electron
          - $HOME/.cache/electron-builder

      before_cache:
        - rm -rf $HOME/.cache/electron-builder/wine
      os: linux
      services: docker
      language: generic
      script:
      - |
        docker run --rm \
          -e GH_TOKEN=${GH_TOKEN} \
         -v ${PWD}:/project \
         -v ~/.cache/electron:/root/.cache/electron \
         -v ~/.cache/electron-builder:/root/.cache/electron-builder \
         electronuserland/builder:wine \
          /bin/bash -c "yarn --link-duplicates --pure-lockfile && yarn build --linux"
    - stage: Build
      cache:
        directories:
          - node_modules
          - $HOME/.cache/electron
          - $HOME/.cache/electron-builder

      before_cache:
        - rm -rf $HOME/.cache/electron-builder/wine
      os: linux
      services: docker
      language: generic
      script:
      - |
        docker run --rm \
          -e GH_TOKEN=${GH_TOKEN} \
         -v ${PWD}:/project \
         -v ~/.cache/electron:/root/.cache/electron \
         -v ~/.cache/electron-builder:/root/.cache/electron-builder \
         electronuserland/builder:wine \
          /bin/bash -c "yarn --link-duplicates --pure-lockfile && yarn build --win"

    - stage: Release
      if: tag IS present
      cache:
        directories:
          - node_modules
          - $HOME/.cache/electron
          - $HOME/.cache/electron-builder

      before_cache:
        - rm -rf $HOME/.cache/electron-builder/wine
      os: osx
      osx_image: xcode10.2
      language: node_js
      node_js: node
      env:
        - ELECTRON_CACHE=$HOME/.cache/electron
        - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder
      script: 
      - yarn install
      - yarn release
    - stage: Release
      if: tag IS present
      cache:
        directories:
          - node_modules
          - $HOME/.cache/electron
          - $HOME/.cache/electron-builder

      before_cache:
        - rm -rf $HOME/.cache/electron-builder/wine
      os: linux
      services: docker
      language: generic
      script:
      - |
        docker run --rm \
          -e GH_TOKEN=${GH_TOKEN} \
         -v ${PWD}:/project \
         -v ~/.cache/electron:/root/.cache/electron \
         -v ~/.cache/electron-builder:/root/.cache/electron-builder \
         electronuserland/builder:wine \
          /bin/bash -c "yarn --link-duplicates --pure-lockfile && yarn release --linux"
    - stage: Release
      if: tag IS present
      cache:
        directories:
          - node_modules
          - $HOME/.cache/electron
          - $HOME/.cache/electron-builder

      before_cache:
        - rm -rf $HOME/.cache/electron-builder/wine
      os: linux
      services: docker
      language: generic
      script:
      - |
        docker run --rm \
          -e GH_TOKEN=${GH_TOKEN} \
         -v ${PWD}:/project \
         -v ~/.cache/electron:/root/.cache/electron \
         -v ~/.cache/electron-builder:/root/.cache/electron-builder \
         electronuserland/builder:wine \
          /bin/bash -c "yarn --link-duplicates --pure-lockfile && yarn release --win"

env:
  global:
    secure: "GJhBwjOG+vSxe0yQW2GyCXsapISsEhNQxVzKM8P5mVTtMBpy+/eaRgwhbdiNfZ5umqrj4rlKyr0EvhcC4nCdpEZ3pGad7F8LZGeRf8Z/sEFuAOrCl/q5ek0z2PDXwYqgxi1WcOGRFlGAGPu9Rb0jHeD/YS+/E7xpdeZoc4OEYen6IlMIDKubvuI6E8hCbA5QIg/4vozF/kK6tUJ2BWMQsxwiaPVLMQKrUr065x2o20EqDnanP/Bm/aeUVipwWIlGEKkSuO0DeGUbNPXI5nOzZqjl8GUd/rvZ46nyWjdZT2OR1j1qCAI1qgiLM4i3DqTgR320ITR/30YHze1z4IuJgmBp5sjlJ0/LazDuId8XcTDqxTQIEWH22hpoN9FOdB4ATAIZ8lNNgBUNn1Y/9RJ0ex7QEi0nJ4Tw4LeiAvYelSz2q+Utnx9h9VN1qpCGpRekdp1LK0I2gAkjPb3ISsC1+0y2fkhUyNergqNIKB1gN5Hy+oudtp2Iuvp8SrGQ31GMrtQO0hYz9leIbRUQGi86FwRk+9OQp6LZyLZZNSpHNLQaQjLFkMt+BmkzuC3CTMtDPKzlCiq324HoEvC3JEO47MtxQGqf5sJkPX4jbwwpJP0YqqyZHWb4ufsOy697Y4CAGk5jlnUb4QvIDSfF5oghy53tJSdz/6ilcwgHFG+3/Rw="
